#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {

	aliases  {
		spi-screen = &spi1;
		dma-screen = &dma1;
	};
	chosen {
		zephyr,console = &usart3;
		zephyr,shell-uart = &usart3;
	};

	leds {
		compatible = "gpio-leds";
		station_led_r: red {
			gpios = <&gpiob 0 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "Red";
		};
		station_led_g: green {
			gpios = <&gpiob 10 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "Green";
		};
		station_led_b: blue {
			gpios = <&gpioe 0 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "Blue";
		};
	};
	
	line_mux {
		compatible = "gpio-leds";
		line_a: a {
			gpios = <&gpioa 7 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "line_a";
		};
		line_b: b {
			gpios = <&gpiod 14 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "line_b";
		};
		line_c: c {
			gpios = <&gpiod 15 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "line_c";
		};
		line_d: d {
			gpios = <&gpiof 12 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "line_d";
		};
	};

	ctl_gpio {
		compatible = "gpio-leds";
		line_output_en: line_output_en {
			gpios = <&gpioa 6 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "line_output_en";
		};
	};

	gpio_keys: buttons{
		compatible = "gpio-keys";
		user_button_up: up {
			label = "up";
			gpios = <&gpiof 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)> ;
			zephyr,code = <INPUT_KEY_U>;
		};
		user_button_down: down {
			label = "down";
			gpios = <&gpiof 0 ( GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_D>;
		};
		user_button_left: left {
			label = "left";
			gpios = <&gpiod 0 ( GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_L>;
		};
		user_button_right: right {
			label = "right";
			gpios = <&gpiof 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_R>;
		};
		user_button_middle: middle {
			label = "middle";
			gpios = <&gpiod 1 ( GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_M>;
		};
/*
		station_button: stb {
			label = "stb";
			gpios = <&gpiod 1 ( GPIO_ACTIVE_LOW | GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_M>;
		};
*/
		stop_blink_button_dt: stop_blink {
			label = "stop_blink_button";
			gpios = <&gpioe 15 (GPIO_ACTIVE_LOW | GPIO_PULL_DOWN )>;
			zephyr,code = <INPUT_KEY_S>;
		};
	
	};

	longpress {
        	input = <&user_button_up>;
	        compatible = "zephyr,input-longpress";
        	input-codes = <INPUT_KEY_L>, <INPUT_KEY_R>,<INPUT_KEY_D>, <INPUT_KEY_U>, <INPUT_KEY_M>;
	        short-codes = <INPUT_KEY_L>, <INPUT_KEY_R>,<INPUT_KEY_D>, <INPUT_KEY_U>, <INPUT_KEY_M>;
	        long-codes = <INPUT_KEY_L>, <INPUT_KEY_R>,<INPUT_KEY_D>, <INPUT_KEY_U>, <INPUT_KEY_M>;
	        long-delay-ms = <2000>;
	};

	enable_nodes {
             compatible = "gpio-leds";
          	enables: en {
		/*
			gpios =  <&arduino_header 1 GPIO_ACTIVE_LOW>,
				 <&arduino_header 2 GPIO_ACTIVE_LOW>,
				  <&arduino_header 3 GPIO_ACTIVE_LOW>,
				   <&arduino_header 4 GPIO_ACTIVE_LOW>,
				    <&arduino_header 5 GPIO_ACTIVE_LOW>;
		*/
                     gpios = <&gpioe 7 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>,
		    	 <&gpiod 12 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpiod 11 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpioe 10 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpioe 2 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpioe 12 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpioe 14 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ,
		    	 <&gpioa 0 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)> ;
			 
              };
     	};

	arduino_header: connector {
		compatible = "arduino-header-r3";
		#gpio-cells = <2>;
		gpio-map-mask = <0xffffffff 0xffffffc0>;
		gpio-map-pass-thru = <0 0x3f>;
		gpio-map = <0 0 &gpioa 3 0>,	/* A0 */
			   <1 0 &gpioa 4 0>,	/* A1 */
			   <2 0 &gpioa 28 0>,	/* A2 */
			   <3 0 &gpioa 29 0>,	/* A3 */
			   <4 0 &gpioa 30 0>,	/* A4 */
			   <5 0 &gpioa 31 0>,	/* A5 */
			   <6 0 &gpiob 1 0>,	/* D0 */
			   <7 0 &gpiob 2 0>,	/* D1 */
			   <8 0 &gpiob 3 0>,	/* D2 */
			   <9 0 &gpiob 4 0>,	/* D3 */
			   <10 0 &gpiob 5 0>,	/* D4 */
			   <11 0 &gpiob 6 0>,	/* D5 */
			   <12 0 &gpiob 7 0>,	/* D6 */
			   <13 0 &gpiob 8 0>,	/* D7 */
			   <14 0 &gpiob 10 0>,	/* D8 */
			   <15 0 &gpiob 11 0>,	/* D9 */
			   <16 0 &gpiob 12 0>,	/* D10 */
			   <17 0 &gpiob 13 0>,	/* D11 */
			   <18 0 &gpiob 14 0>,	/* D12 */
			   <19 0 &gpiob 15 0>,	/* D13 */
			   <20 0 &gpioa 26 0>,	/* D14 */
			   <21 0 &gpioa 27 0>;	/* D15 */
	};

	zephyr,user {
		/* adjust channel number according to pinmux in board.dts */
		io-channels = <&adc1 10>, <&adc1 1>, <&adc1 4>;
	};



			
};


/*
	
&clk_hse {
	status = "okay";
	clock-frequency = <8000000>;
};

&clk_lse {
	status = "okay";
	clock-frequency = <32784>;
};


&clk_hsi {
	status = "okay";
	clock-frequency = <16000000>;
};

&pll {
	div-m = <8>;
	mul-n = <336>;
	div-p = <2>;
	div-q = <7>;
	clocks = <&clk_hse>;
	status = "okay";
};





&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(168)>;
 	ahb-prescaler = <1>;
	apb1-prescaler = <4>;
	apb2-prescaler = <2>;
	
};


&usart3 {
	pinctrl-0 = <&usart3_tx_pc10 &usart3_rx_pc11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};
*/

&adc1 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-0 = <&adc1_in10_pc0>, <&adc1_in1_pa1>,  <&adc1_in4_pa4>;
	pinctrl-names = "default";


	channel@10 {
		reg = <10>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

	channel@4 {
		reg = <4>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};


&dma1 {
	label = "dma_screen";
	status="okay";
};

&spi1  {
	pinctrl-0 = <&spi1_nss_pa4 &spi1_sck_pb3
		     &spi1_miso_pb4 &spi1_mosi_pb5>;
	pinctrl-names = "default";
	status = "okay";
	label="spi_screen";

	/* Specify DMA configuration */
    	dmas = <&dma1 5 0>, <&dma1 6 0>; // DMA channel 5 for TX, DMA channel 6 for RX
   	dma-names = "tx", "rx";
};



