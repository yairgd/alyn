!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/yair/trees/project/robot/mcu/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
ADPD_H	robot.h	/^#define ADPD_H /;"	d
AckNack	protocol-v1/ProtoclDataStructures.h	/^		struct AckNack  {$/;"	s	namespace:Simple::ResponseData
CheckSum	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Cmd	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
CmdId	protocol-v1/ProtoclDataStructures.h	/^		enum  CmdId:unsigned char   {Reserved=0,$/;"	g	namespace:Simple::RequestData	typeref:typename:unsigned char
Command	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	e	enum:Simple::MsgType	access:public
ConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct ConfigData {$/;"	s	namespace:Simple::RequestData
ConfigParam	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
ConfigParamData	protocol-v1/ProtoclDataStructures.h	/^		struct ConfigParamData  {$/;"	s	namespace:Simple::ResponseData
Create	protocol-v1/messages.h	/^			std::shared_ptr<Msg<MsgData> > Create(MsgData & msg, unsigned int  msg_counter, MsgType msgTy/;"	f	struct:Simple::Msg	typeref:typename:std::shared_ptr<Msg<MsgData>>	access:public	signature:(MsgData & msg,unsigned int msg_counter,MsgType msgType,CmdId cmdId)
Create	protocol-v1/messages.h	/^			std::shared_ptr<Msg<MsgData>>  Create(MsgData & data)  {$/;"	f	struct:Simple::IMessageCreator	typeref:typename:std::shared_ptr<Msg<MsgData>>	access:public	signature:(MsgData & data)
Data	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
DataId	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	g	namespace:Simple::ResponseData	typeref:typename:unsigned char
DataStream	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	e	enum:Simple::MsgType	access:public
DeviceInfo	protocol-v1/ProtoclDataStructures.h	/^						DeviceInfo, $/;"	e	enum:Simple::RequestData::CmdId	access:public
DeviceInfo	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
DeviceInfo	protocol-v1/messages.h	/^	struct DeviceInfo:public IMessageCreator<EmptyStruct, MsgType::Command,CmdId::DeviceInfo> {$/;"	s	namespace:Simple	inherits:IMessageCreator<EmptyStruct,MsgType::Command,CmdId::DeviceInfo>
DeviceInfoData	protocol-v1/ProtoclDataStructures.h	/^		struct DeviceInfoData {$/;"	s	namespace:Simple::ResponseData
EmptyStruct	protocol-v1/ProtoclDataStructures.h	/^		struct EmptyStruct {$/;"	s	namespace:Simple::RequestData
GenericParsingData	protocol-v1/ProtoclDataStructures.h	/^			struct GenericParsingData {$/;"	s	namespace:Simple::ResponseData
GetConfig	protocol-v1/ProtoclDataStructures.h	/^						GetConfig$/;"	e	enum:Simple::RequestData::CmdId	access:public
GetConfig	protocol-v1/messages.h	/^	struct GetConfig:public IMessageCreator<ConfigData, MsgType::Command,CmdId::GetConfig> {$/;"	s	namespace:Simple	inherits:IMessageCreator<ConfigData,MsgType::Command,CmdId::GetConfig>
GetIRData	protocol-v1/messages.h	/^	struct GetIRData:public IMessageCreator<EmptyStruct, MsgType::Command,CmdId::RequestRawData> {$/;"	s	namespace:Simple	inherits:IMessageCreator<EmptyStruct,MsgType::Command,CmdId::RequestRawData>
GetUart	IProtocolParser.h	/^		std::shared_ptr<Hal::IUart> GetUart()  {$/;"	f	class:IProtocolParser	typeref:typename:std::shared_ptr<Hal::IUart>	access:public	signature:()
HandleUartMsg	protocol-v1/ProtocolParser.h	/^			HandleUartMsg()  = default;$/;"	p	class:Simple::HandleUartMsg	access:public	signature:()
HandleUartMsg	protocol-v1/ProtocolParser.h	/^	class HandleUartMsg: public IHandleUartMsg {$/;"	c	namespace:Simple	inherits:IHandleUartMsg
IHandleUartMsg	protocol-v1/ProtocolParser.h	/^	class IHandleUartMsg  {$/;"	c	namespace:Simple
IMessageCreator	protocol-v1/messages.h	/^		struct IMessageCreator {$/;"	s	namespace:Simple
IProtocolParser	IProtocolParser.h	/^		IProtocolParser(std::shared_ptr<Hal::IUart> uart) : m_uart(uart)  {};$/;"	f	class:IProtocolParser	access:public	signature:(std::shared_ptr<Hal::IUart> uart)
IProtocolParser	IProtocolParser.h	/^class IProtocolParser {$/;"	c
IProtocolParser::GetUart	IProtocolParser.h	/^		std::shared_ptr<Hal::IUart> GetUart()  {$/;"	f	class:IProtocolParser	typeref:typename:std::shared_ptr<Hal::IUart>	access:public	signature:()
IProtocolParser::IProtocolParser	IProtocolParser.h	/^		IProtocolParser(std::shared_ptr<Hal::IUart> uart) : m_uart(uart)  {};$/;"	f	class:IProtocolParser	access:public	signature:(std::shared_ptr<Hal::IUart> uart)
IProtocolParser::Parse	IProtocolParser.h	/^		void Parse() {$/;"	f	class:IProtocolParser	typeref:typename:void	access:public	signature:()
IProtocolParser::Pushdata	IProtocolParser.h	/^		void Pushdata(unsigned char * data, int n) {$/;"	f	class:IProtocolParser	typeref:typename:void	access:public	signature:(unsigned char * data,int n)
IProtocolParser::StateTrack	IProtocolParser.h	/^		virtual void StateTrack(unsigned char c)  = 0;$/;"	p	class:IProtocolParser	typeref:typename:void	access:public	signature:(unsigned char c)
IProtocolParser::b	IProtocolParser.h	/^		unsigned char b[1024];$/;"	m	class:IProtocolParser	typeref:typename:unsigned char[1024]	access:private
IProtocolParser::m_uart	IProtocolParser.h	/^		std::shared_ptr<Hal::IUart> m_uart;$/;"	m	class:IProtocolParser	typeref:typename:std::shared_ptr<Hal::IUart>	access:private
IrPhotodiodesRaw	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Length	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
MESSGAE_1_H	protocol-v1/messages.h	/^#define MESSGAE_1_H /;"	d
Msg	protocol-v1/messages.h	/^		struct   Msg {$/;"	s	namespace:Simple
MsgToParse	protocol-v1/ProtocolParser.h	/^	using MsgToParse = Simple::Msg<ParsingData> ;$/;"	t	namespace:Simple	typeref:typename:Simple::Msg<ParsingData>
MsgType	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	g	namespace:Simple	typeref:typename:unsigned char
MsgType	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
NewData	protocol-v1/ProtocolParser.h	/^			virtual void NewData(const MsgToParse &msg) = 0;$/;"	p	class:Simple::IHandleUartMsg	typeref:typename:void	access:public	signature:(const MsgToParse & msg)
NewData	protocol-v1/ProtocolParser.h	/^			void NewData(const MsgToParse &msg) override {$/;"	f	class:Simple::HandleUartMsg	typeref:typename:void	access:public	signature:(const MsgToParse & msg)
PROTOCL_PARSER_H	IProtocolParser.h	/^#define PROTOCL_PARSER_H /;"	d
PROTOCOL_H	protocol-v1/ProtocolParser.h	/^#define PROTOCOL_H /;"	d
Parse	IProtocolParser.h	/^		void Parse() {$/;"	f	class:IProtocolParser	typeref:typename:void	access:public	signature:()
ParsingData	protocol-v1/ProtocolParser.h	/^	using ParsingData = GenericParsingData<1024>;$/;"	t	namespace:Simple	typeref:typename:GenericParsingData<1024>
Preamble	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
ProtoclDataStructures_h	protocol-v1/ProtoclDataStructures.h	/^#define ProtoclDataStructures_h /;"	d
ProtocolParser	protocol-v1/ProtocolParser.h	/^			ProtocolParser(std::shared_ptr<Hal::IUart> uart, std::shared_ptr<Simple::IHandleUartMsg>  han/;"	f	class:Simple::ProtocolParser	access:public	signature:(std::shared_ptr<Hal::IUart> uart,std::shared_ptr<Simple::IHandleUartMsg> handleUartMsg)
ProtocolParser	protocol-v1/ProtocolParser.h	/^	class ProtocolParser: public IProtocolParser {$/;"	c	namespace:Simple	inherits:IProtocolParser
Pushdata	IProtocolParser.h	/^		void Pushdata(unsigned char * data, int n) {$/;"	f	class:IProtocolParser	typeref:typename:void	access:public	signature:(unsigned char * data,int n)
ReceiveState	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	g	class:Simple::ProtocolParser	access:private
RequestData	protocol-v1/ProtoclDataStructures.h	/^	namespace RequestData {$/;"	n	namespace:Simple
RequestRawData	protocol-v1/ProtoclDataStructures.h	/^						RequestRawData=1 , $/;"	e	enum:Simple::RequestData::CmdId	access:public
Reserved	protocol-v1/ProtoclDataStructures.h	/^		enum  CmdId:unsigned char   {Reserved=0,$/;"	e	enum:Simple::RequestData::CmdId	access:public
Reserved	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Response	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
ResponseData	protocol-v1/ProtoclDataStructures.h	/^	namespace ResponseData {$/;"	n	namespace:Simple
Robot	robot.h	/^		Robot(std::shared_ptr<Hal::IUart> uart) {$/;"	f	class:Robot	access:public	signature:(std::shared_ptr<Hal::IUart> uart)
Robot	robot.h	/^class Robot {$/;"	c
Robot::Robot	robot.h	/^		Robot(std::shared_ptr<Hal::IUart> uart) {$/;"	f	class:Robot	access:public	signature:(std::shared_ptr<Hal::IUart> uart)
Robot::configData	robot.h	/^		auto & configData() {$/;"	f	class:Robot	typeref:typename:auto &	access:public	signature:()
Robot::configData	robot.h	/^		void configData(Simple::ResponseData::ConfigParamData & ConfigParamData) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(Simple::ResponseData::ConfigParamData & ConfigParamData)
Robot::deviceInfo	robot.h	/^		auto  & deviceInfo() {$/;"	f	class:Robot	typeref:typename:auto &	access:public	signature:()
Robot::deviceInfo	robot.h	/^		void deviceInfo(Simple::ResponseData::DeviceInfoData & DeviceInfoData) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(Simple::ResponseData::DeviceInfoData & DeviceInfoData)
Robot::getConfigData	robot.h	/^		void getConfigData(char config_id) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char config_id)
Robot::getDeviceInfo	robot.h	/^		void getDeviceInfo() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
Robot::m_ConfigParamData	robot.h	/^		Simple::ResponseData::ConfigParamData m_ConfigParamData;$/;"	m	class:Robot	typeref:typename:Simple::ResponseData::ConfigParamData	access:private
Robot::m_DeviceInfoData	robot.h	/^		Simple::ResponseData::DeviceInfoData m_DeviceInfoData;$/;"	m	class:Robot	typeref:typename:Simple::ResponseData::DeviceInfoData	access:private
Robot::m_uart	robot.h	/^		std::shared_ptr<Hal::IUart> m_uart;$/;"	m	class:Robot	typeref:typename:std::shared_ptr<Hal::IUart>	access:private
Robot::scan	robot.h	/^		bool scan(std::shared_ptr<Data::Scan> scan, std::shared_ptr<StreamData> streamData) {$/;"	f	class:Robot	typeref:typename:bool	access:public	signature:(std::shared_ptr<Data::Scan> scan,std::shared_ptr<StreamData> streamData)
Robot::setLedWidth	robot.h	/^		void setLedWidth(char led_width_in_microseconds) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char led_width_in_microseconds)
Robot::setNumberOfPulses	robot.h	/^		void setNumberOfPulses(char num_int, char num_repeat) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char num_int,char num_repeat)
Robot::setScanMode	robot.h	/^		void setScanMode(char mode) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char mode)
Robot::setSlotSize	robot.h	/^		void setSlotSize(char signal, char dark) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char signal,char dark)
Robot::start	robot.h	/^		void start() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
Robot::stop	robot.h	/^		void stop() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
Robot::timeSlotConfigData	robot.h	/^		void timeSlotConfigData(char time_slot, char led_id,char pd_id_for_chan_1,char pd_id_for_chan_/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char time_slot,char led_id,char pd_id_for_chan_1,char pd_id_for_chan_2)
RobotSetLedWidth	protocol-v1/ProtoclDataStructures.h	/^						RobotSetLedWidth,$/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotSetLedWidth	protocol-v1/messages.h	/^	struct RobotSetLedWidth:public IMessageCreator<RobotSetLedWidthData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetLedWidthData,MsgType::Command,CmdId::RobotSetLedWidth>
RobotSetLedWidthData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetLedWidthData {$/;"	s	namespace:Simple::RequestData
RobotSetNumberOfPulses	protocol-v1/ProtoclDataStructures.h	/^						RobotSetNumberOfPulses, $/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotSetNumberOfPulses	protocol-v1/messages.h	/^	struct RobotSetNumberOfPulses:public IMessageCreator<RobotSetNumberOfPulsesData, MsgType::Comma/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetNumberOfPulsesData,MsgType::Command,CmdId::RobotSetNumberOfPulses>
RobotSetNumberOfPulsesData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetNumberOfPulsesData {$/;"	s	namespace:Simple::RequestData
RobotSetScanMode	protocol-v1/ProtoclDataStructures.h	/^						RobotSetScanMode, $/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotSetScanMode	protocol-v1/messages.h	/^	struct RobotSetScanMode:public IMessageCreator<RobotSetScanModeData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetScanModeData,MsgType::Command,CmdId::RobotSetScanMode>
RobotSetScanModeData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetScanModeData {$/;"	s	namespace:Simple::RequestData
RobotSetSlotSize	protocol-v1/ProtoclDataStructures.h	/^						RobotSetSlotSize, $/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotSetSlotSize	protocol-v1/messages.h	/^	struct RobotSetSlotSize:public IMessageCreator<RobotSetSlotSizeData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetSlotSizeData,MsgType::Command,CmdId::RobotSetSlotSize>
RobotSetSlotSizeData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetSlotSizeData {$/;"	s	namespace:Simple::RequestData
RobotSingleConfig	protocol-v1/ProtoclDataStructures.h	/^						RobotSingleConfig,$/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotSingleConfig	protocol-v1/messages.h	/^	struct RobotSingleConfig:public IMessageCreator<RobotSingleConfigData, MsgType::Command,CmdId::/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSingleConfigData,MsgType::Command,CmdId::RobotSingleConfig>
RobotSingleConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSingleConfigData {$/;"	s	namespace:Simple::RequestData
RobotTimeSlotConfig	protocol-v1/ProtoclDataStructures.h	/^						RobotTimeSlotConfig,$/;"	e	enum:Simple::RequestData::CmdId	access:public
RobotTimeSlotConfig	protocol-v1/messages.h	/^	struct RobotTimeSlotConfig:public IMessageCreator<RobotTimeslotConfigData, MsgType::Command,Cmd/;"	s	namespace:Simple	inherits:IMessageCreator<RobotTimeslotConfigData,MsgType::Command,CmdId::RobotTimeSlotConfig>
RobotTimeslotConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotTimeslotConfigData {$/;"	s	namespace:Simple::RequestData
SENSOR_DATA_PARSER_H	protocol-v1/SensorDataParser.h	/^#define SENSOR_DATA_PARSER_H /;"	d
SensorDataParser	protocol-v1/SensorDataParser.h	/^			SensorDataParser(char DataSize, char DarkSize ) {$/;"	f	struct:Simple::SensorDataParser	access:public	signature:(char DataSize,char DarkSize)
SensorDataParser	protocol-v1/SensorDataParser.h	/^	struct SensorDataParser {$/;"	s	namespace:Simple
Serialize	protocol-v1/messages.h	/^			void   Serialize() {$/;"	f	struct:Simple::Msg	typeref:typename:void	access:public	signature:()
Simple	protocol-v1/ProtoclDataStructures.h	/^namespace Simple {$/;"	n
Simple	protocol-v1/ProtocolParser.h	/^namespace Simple {$/;"	n
Simple	protocol-v1/SensorDataParser.h	/^namespace Simple {$/;"	n
Simple	protocol-v1/messages.h	/^namespace Simple {$/;"	n
Simple::Command	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	e	enum:Simple::MsgType	access:public
Simple::DataStream	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	e	enum:Simple::MsgType	access:public
Simple::DeviceInfo	protocol-v1/messages.h	/^	struct DeviceInfo:public IMessageCreator<EmptyStruct, MsgType::Command,CmdId::DeviceInfo> {$/;"	s	namespace:Simple	inherits:IMessageCreator<EmptyStruct,MsgType::Command,CmdId::DeviceInfo>
Simple::DeviceInfo::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<EmptyStruct>> operator() () {$/;"	f	struct:Simple::DeviceInfo	typeref:typename:std::shared_ptr<Msg<EmptyStruct>>	access:public	signature:()
Simple::GetConfig	protocol-v1/messages.h	/^	struct GetConfig:public IMessageCreator<ConfigData, MsgType::Command,CmdId::GetConfig> {$/;"	s	namespace:Simple	inherits:IMessageCreator<ConfigData,MsgType::Command,CmdId::GetConfig>
Simple::GetConfig::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<ConfigData>> operator () (char config_id)  {$/;"	f	struct:Simple::GetConfig	typeref:typename:std::shared_ptr<Msg<ConfigData>>	access:public	signature:(char config_id)
Simple::GetIRData	protocol-v1/messages.h	/^	struct GetIRData:public IMessageCreator<EmptyStruct, MsgType::Command,CmdId::RequestRawData> {$/;"	s	namespace:Simple	inherits:IMessageCreator<EmptyStruct,MsgType::Command,CmdId::RequestRawData>
Simple::GetIRData::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<EmptyStruct>> operator() () {$/;"	f	struct:Simple::GetIRData	typeref:typename:std::shared_ptr<Msg<EmptyStruct>>	access:public	signature:()
Simple::HandleUartMsg	protocol-v1/ProtocolParser.h	/^	class HandleUartMsg: public IHandleUartMsg {$/;"	c	namespace:Simple	inherits:IHandleUartMsg
Simple::HandleUartMsg::HandleUartMsg	protocol-v1/ProtocolParser.h	/^			HandleUartMsg()  = default;$/;"	p	class:Simple::HandleUartMsg	access:public	signature:()
Simple::HandleUartMsg::NewData	protocol-v1/ProtocolParser.h	/^			void NewData(const MsgToParse &msg) override {$/;"	f	class:Simple::HandleUartMsg	typeref:typename:void	access:public	signature:(const MsgToParse & msg)
Simple::HandleUartMsg::Wrongdata	protocol-v1/ProtocolParser.h	/^			void Wrongdata() override {$/;"	f	class:Simple::HandleUartMsg	typeref:typename:void	access:public	signature:()
Simple::IHandleUartMsg	protocol-v1/ProtocolParser.h	/^	class IHandleUartMsg  {$/;"	c	namespace:Simple
Simple::IHandleUartMsg::NewData	protocol-v1/ProtocolParser.h	/^			virtual void NewData(const MsgToParse &msg) = 0;$/;"	p	class:Simple::IHandleUartMsg	typeref:typename:void	access:public	signature:(const MsgToParse & msg)
Simple::IHandleUartMsg::Wrongdata	protocol-v1/ProtocolParser.h	/^			virtual void Wrongdata() = 0;$/;"	p	class:Simple::IHandleUartMsg	typeref:typename:void	access:public	signature:()
Simple::IMessageCreator	protocol-v1/messages.h	/^		struct IMessageCreator {$/;"	s	namespace:Simple
Simple::IMessageCreator::Create	protocol-v1/messages.h	/^			std::shared_ptr<Msg<MsgData>>  Create(MsgData & data)  {$/;"	f	struct:Simple::IMessageCreator	typeref:typename:std::shared_ptr<Msg<MsgData>>	access:public	signature:(MsgData & data)
Simple::IMessageCreator::m_msg_counter	protocol-v1/messages.h	/^			static unsigned int  m_msg_counter; 	$/;"	m	struct:Simple::IMessageCreator	typeref:typename:unsigned int	access:public
Simple::IMessageCreator< MsgData, msgType, cmdId >::m_msg_counter	protocol-v1/messages.h	/^		unsigned int IMessageCreator< MsgData,  msgType, cmdId >::m_msg_counter = 0;$/;"	m	class:Simple::IMessageCreator< MsgData, msgType, cmdId >	typeref:typename:unsigned int
Simple::Msg	protocol-v1/messages.h	/^		struct   Msg {$/;"	s	namespace:Simple
Simple::Msg::Create	protocol-v1/messages.h	/^			std::shared_ptr<Msg<MsgData> > Create(MsgData & msg, unsigned int  msg_counter, MsgType msgTy/;"	f	struct:Simple::Msg	typeref:typename:std::shared_ptr<Msg<MsgData>>	access:public	signature:(MsgData & msg,unsigned int msg_counter,MsgType msgType,CmdId cmdId)
Simple::Msg::Serialize	protocol-v1/messages.h	/^			void   Serialize() {$/;"	f	struct:Simple::Msg	typeref:typename:void	access:public	signature:()
Simple::Msg::buffer	protocol-v1/messages.h	/^			char buffer[sizeof (MsgData) + 6];$/;"	m	struct:Simple::Msg	typeref:typename:char[]	access:public
Simple::Msg::cmd	protocol-v1/messages.h	/^			char cmd;$/;"	m	struct:Simple::Msg	typeref:typename:char	access:public
Simple::Msg::crc	protocol-v1/messages.h	/^			unsigned char crc;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
Simple::Msg::data	protocol-v1/messages.h	/^			MsgData data; $/;"	m	struct:Simple::Msg	typeref:typename:MsgData	access:public
Simple::Msg::postamble	protocol-v1/messages.h	/^			unsigned char postamble;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
Simple::Msg::preamble	protocol-v1/messages.h	/^			unsigned char preamble;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
Simple::Msg::size	protocol-v1/messages.h	/^			constexpr size_t size() {$/;"	f	struct:Simple::Msg	typeref:typename:size_t	access:public	signature:()
Simple::Msg::type	protocol-v1/messages.h	/^			MsgType type;$/;"	m	struct:Simple::Msg	typeref:typename:MsgType	access:public
Simple::MsgToParse	protocol-v1/ProtocolParser.h	/^	using MsgToParse = Simple::Msg<ParsingData> ;$/;"	t	namespace:Simple	typeref:typename:Simple::Msg<ParsingData>
Simple::MsgType	protocol-v1/ProtoclDataStructures.h	/^	enum  MsgType:unsigned char   { DataStream=0, Command=1};$/;"	g	namespace:Simple	typeref:typename:unsigned char
Simple::ParsingData	protocol-v1/ProtocolParser.h	/^	using ParsingData = GenericParsingData<1024>;$/;"	t	namespace:Simple	typeref:typename:GenericParsingData<1024>
Simple::ProtocolParser	protocol-v1/ProtocolParser.h	/^	class ProtocolParser: public IProtocolParser {$/;"	c	namespace:Simple	inherits:IProtocolParser
Simple::ProtocolParser::CheckSum	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::Cmd	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::Data	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::Length	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::MsgType	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::Preamble	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::ProtocolParser	protocol-v1/ProtocolParser.h	/^			ProtocolParser(std::shared_ptr<Hal::IUart> uart, std::shared_ptr<Simple::IHandleUartMsg>  han/;"	f	class:Simple::ProtocolParser	access:public	signature:(std::shared_ptr<Hal::IUart> uart,std::shared_ptr<Simple::IHandleUartMsg> handleUartMsg)
Simple::ProtocolParser::ReceiveState	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	g	class:Simple::ProtocolParser	access:private
Simple::ProtocolParser::StateTrack	protocol-v1/ProtocolParser.h	/^			void StateTrack(unsigned char c) override {$/;"	f	class:Simple::ProtocolParser	typeref:typename:void	access:private	signature:(unsigned char c)
Simple::ProtocolParser::Suffix	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
Simple::ProtocolParser::idx	protocol-v1/ProtocolParser.h	/^			int idx;$/;"	m	class:Simple::ProtocolParser	typeref:typename:int	access:private
Simple::ProtocolParser::length	protocol-v1/ProtocolParser.h	/^			unsigned char length;$/;"	m	class:Simple::ProtocolParser	typeref:typename:unsigned char	access:private
Simple::ProtocolParser::m_handleMsg	protocol-v1/ProtocolParser.h	/^			std::shared_ptr<IHandleUartMsg>  m_handleMsg ;$/;"	m	class:Simple::ProtocolParser	typeref:typename:std::shared_ptr<IHandleUartMsg>	access:private
Simple::ProtocolParser::msg	protocol-v1/ProtocolParser.h	/^			MsgToParse msg;$/;"	m	class:Simple::ProtocolParser	typeref:typename:MsgToParse	access:private
Simple::ProtocolParser::state	protocol-v1/ProtocolParser.h	/^			ReceiveState state  = Preamble; $/;"	m	class:Simple::ProtocolParser	typeref:typename:ReceiveState	access:private
Simple::RequestData	protocol-v1/ProtoclDataStructures.h	/^	namespace RequestData {$/;"	n	namespace:Simple
Simple::RequestData::CmdId	protocol-v1/ProtoclDataStructures.h	/^		enum  CmdId:unsigned char   {Reserved=0,$/;"	g	namespace:Simple::RequestData	typeref:typename:unsigned char
Simple::RequestData::ConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct ConfigData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::ConfigData::config_id	protocol-v1/ProtoclDataStructures.h	/^			char config_id; $/;"	m	struct:Simple::RequestData::ConfigData	typeref:typename:char	access:public
Simple::RequestData::DeviceInfo	protocol-v1/ProtoclDataStructures.h	/^						DeviceInfo, $/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::EmptyStruct	protocol-v1/ProtoclDataStructures.h	/^		struct EmptyStruct {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::GetConfig	protocol-v1/ProtoclDataStructures.h	/^						GetConfig$/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RequestRawData	protocol-v1/ProtoclDataStructures.h	/^						RequestRawData=1 , $/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::Reserved	protocol-v1/ProtoclDataStructures.h	/^		enum  CmdId:unsigned char   {Reserved=0,$/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSetLedWidth	protocol-v1/ProtoclDataStructures.h	/^						RobotSetLedWidth,$/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSetLedWidthData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetLedWidthData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotSetLedWidthData::led_width_in_microseconds	protocol-v1/ProtoclDataStructures.h	/^			char led_width_in_microseconds;$/;"	m	struct:Simple::RequestData::RobotSetLedWidthData	typeref:typename:char	access:public
Simple::RequestData::RobotSetNumberOfPulses	protocol-v1/ProtoclDataStructures.h	/^						RobotSetNumberOfPulses, $/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSetNumberOfPulsesData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetNumberOfPulsesData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotSetNumberOfPulsesData::num_int	protocol-v1/ProtoclDataStructures.h	/^			char num_int; $/;"	m	struct:Simple::RequestData::RobotSetNumberOfPulsesData	typeref:typename:char	access:public
Simple::RequestData::RobotSetNumberOfPulsesData::num_repeat	protocol-v1/ProtoclDataStructures.h	/^			char num_repeat; $/;"	m	struct:Simple::RequestData::RobotSetNumberOfPulsesData	typeref:typename:char	access:public
Simple::RequestData::RobotSetScanMode	protocol-v1/ProtoclDataStructures.h	/^						RobotSetScanMode, $/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSetScanModeData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetScanModeData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotSetScanModeData::mode	protocol-v1/ProtoclDataStructures.h	/^			char mode; \/\/  0 conitunes, 1 digital model$/;"	m	struct:Simple::RequestData::RobotSetScanModeData	typeref:typename:char	access:public
Simple::RequestData::RobotSetSlotSize	protocol-v1/ProtoclDataStructures.h	/^						RobotSetSlotSize, $/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSetSlotSizeData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSetSlotSizeData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotSetSlotSizeData::dark	protocol-v1/ProtoclDataStructures.h	/^			char dark;$/;"	m	struct:Simple::RequestData::RobotSetSlotSizeData	typeref:typename:char	access:public
Simple::RequestData::RobotSetSlotSizeData::signal	protocol-v1/ProtoclDataStructures.h	/^			char signal;$/;"	m	struct:Simple::RequestData::RobotSetSlotSizeData	typeref:typename:char	access:public
Simple::RequestData::RobotSingleConfig	protocol-v1/ProtoclDataStructures.h	/^						RobotSingleConfig,$/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotSingleConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotSingleConfigData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotSingleConfigData::id	protocol-v1/ProtoclDataStructures.h	/^			char id;$/;"	m	struct:Simple::RequestData::RobotSingleConfigData	typeref:typename:char	access:public
Simple::RequestData::RobotSingleConfigData::value	protocol-v1/ProtoclDataStructures.h	/^			char value;$/;"	m	struct:Simple::RequestData::RobotSingleConfigData	typeref:typename:char	access:public
Simple::RequestData::RobotTimeSlotConfig	protocol-v1/ProtoclDataStructures.h	/^						RobotTimeSlotConfig,$/;"	e	enum:Simple::RequestData::CmdId	access:public
Simple::RequestData::RobotTimeslotConfigData	protocol-v1/ProtoclDataStructures.h	/^		struct RobotTimeslotConfigData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::RobotTimeslotConfigData::led_id	protocol-v1/ProtoclDataStructures.h	/^			char led_id;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
Simple::RequestData::RobotTimeslotConfigData::pd_id_for_chan_1	protocol-v1/ProtoclDataStructures.h	/^			char pd_id_for_chan_1;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
Simple::RequestData::RobotTimeslotConfigData::pd_id_for_chan_2	protocol-v1/ProtoclDataStructures.h	/^			char pd_id_for_chan_2;	$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
Simple::RequestData::RobotTimeslotConfigData::time_slot	protocol-v1/ProtoclDataStructures.h	/^			char time_slot;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
Simple::RequestData::StartStopData	protocol-v1/ProtoclDataStructures.h	/^		struct StartStopData {$/;"	s	namespace:Simple::RequestData
Simple::RequestData::StartStopData::on_off	protocol-v1/ProtoclDataStructures.h	/^			char on_off; $/;"	m	struct:Simple::RequestData::StartStopData	typeref:typename:char	access:public
Simple::ResponseData	protocol-v1/ProtoclDataStructures.h	/^	namespace ResponseData {$/;"	n	namespace:Simple
Simple::ResponseData::AckNack	protocol-v1/ProtoclDataStructures.h	/^		struct AckNack  {$/;"	s	namespace:Simple::ResponseData
Simple::ResponseData::AckNack::ack_nack	protocol-v1/ProtoclDataStructures.h	/^			char ack_nack;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
Simple::ResponseData::AckNack::cmd_id	protocol-v1/ProtoclDataStructures.h	/^			char cmd_id;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
Simple::ResponseData::AckNack::payload_idx	protocol-v1/ProtoclDataStructures.h	/^			char payload_idx;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
Simple::ResponseData::ConfigParam	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Simple::ResponseData::ConfigParamData	protocol-v1/ProtoclDataStructures.h	/^		struct ConfigParamData  {$/;"	s	namespace:Simple::ResponseData
Simple::ResponseData::ConfigParamData::config_id	protocol-v1/ProtoclDataStructures.h	/^			char config_id;$/;"	m	struct:Simple::ResponseData::ConfigParamData	typeref:typename:char	access:public
Simple::ResponseData::ConfigParamData::config_param	protocol-v1/ProtoclDataStructures.h	/^			char config_param;$/;"	m	struct:Simple::ResponseData::ConfigParamData	typeref:typename:char	access:public
Simple::ResponseData::DataId	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	g	namespace:Simple::ResponseData	typeref:typename:unsigned char
Simple::ResponseData::DeviceInfo	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Simple::ResponseData::DeviceInfoData	protocol-v1/ProtoclDataStructures.h	/^		struct DeviceInfoData {$/;"	s	namespace:Simple::ResponseData
Simple::ResponseData::DeviceInfoData::hw_version	protocol-v1/ProtoclDataStructures.h	/^			char hw_version[2];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[2]	access:public
Simple::ResponseData::DeviceInfoData::mcu_serial_number	protocol-v1/ProtoclDataStructures.h	/^			char mcu_serial_number[8];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[8]	access:public
Simple::ResponseData::DeviceInfoData::sw_version	protocol-v1/ProtoclDataStructures.h	/^			char sw_version[3];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[3]	access:public
Simple::ResponseData::GenericParsingData	protocol-v1/ProtoclDataStructures.h	/^			struct GenericParsingData {$/;"	s	namespace:Simple::ResponseData
Simple::ResponseData::GenericParsingData::buffer	protocol-v1/ProtoclDataStructures.h	/^				unsigned char buffer[n]; $/;"	m	struct:Simple::ResponseData::GenericParsingData	typeref:typename:unsigned char[]	access:public
Simple::ResponseData::GenericParsingData::size	protocol-v1/ProtoclDataStructures.h	/^				int size;$/;"	m	struct:Simple::ResponseData::GenericParsingData	typeref:typename:int	access:public
Simple::ResponseData::IrPhotodiodesRaw	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Simple::ResponseData::Reserved	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Simple::ResponseData::Response	protocol-v1/ProtoclDataStructures.h	/^		enum  DataId:unsigned char   {Reserved=0,IrPhotodiodesRaw, Response,DeviceInfo , ConfigParam }/;"	e	enum:Simple::ResponseData::DataId	access:public
Simple::RobotSetLedWidth	protocol-v1/messages.h	/^	struct RobotSetLedWidth:public IMessageCreator<RobotSetLedWidthData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetLedWidthData,MsgType::Command,CmdId::RobotSetLedWidth>
Simple::RobotSetLedWidth::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetLedWidthData>> operator () (char led_width_in_microseconds)  {$/;"	f	struct:Simple::RobotSetLedWidth	typeref:typename:std::shared_ptr<Msg<RobotSetLedWidthData>>	access:public	signature:(char led_width_in_microseconds)
Simple::RobotSetNumberOfPulses	protocol-v1/messages.h	/^	struct RobotSetNumberOfPulses:public IMessageCreator<RobotSetNumberOfPulsesData, MsgType::Comma/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetNumberOfPulsesData,MsgType::Command,CmdId::RobotSetNumberOfPulses>
Simple::RobotSetNumberOfPulses::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetNumberOfPulsesData>> operator () (char num_int, char num_repeat) /;"	f	struct:Simple::RobotSetNumberOfPulses	typeref:typename:std::shared_ptr<Msg<RobotSetNumberOfPulsesData>>	access:public	signature:(char num_int,char num_repeat)
Simple::RobotSetScanMode	protocol-v1/messages.h	/^	struct RobotSetScanMode:public IMessageCreator<RobotSetScanModeData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetScanModeData,MsgType::Command,CmdId::RobotSetScanMode>
Simple::RobotSetScanMode::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetScanModeData>> operator () (char mode)  {$/;"	f	struct:Simple::RobotSetScanMode	typeref:typename:std::shared_ptr<Msg<RobotSetScanModeData>>	access:public	signature:(char mode)
Simple::RobotSetSlotSize	protocol-v1/messages.h	/^	struct RobotSetSlotSize:public IMessageCreator<RobotSetSlotSizeData, MsgType::Command,CmdId::Ro/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSetSlotSizeData,MsgType::Command,CmdId::RobotSetSlotSize>
Simple::RobotSetSlotSize::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetSlotSizeData>> operator () (int signal, int dark)  {$/;"	f	struct:Simple::RobotSetSlotSize	typeref:typename:std::shared_ptr<Msg<RobotSetSlotSizeData>>	access:public	signature:(int signal,int dark)
Simple::RobotSingleConfig	protocol-v1/messages.h	/^	struct RobotSingleConfig:public IMessageCreator<RobotSingleConfigData, MsgType::Command,CmdId::/;"	s	namespace:Simple	inherits:IMessageCreator<RobotSingleConfigData,MsgType::Command,CmdId::RobotSingleConfig>
Simple::RobotSingleConfig::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSingleConfigData>> operator() (char id, char value) {$/;"	f	struct:Simple::RobotSingleConfig	typeref:typename:std::shared_ptr<Msg<RobotSingleConfigData>>	access:public	signature:(char id,char value)
Simple::RobotTimeSlotConfig	protocol-v1/messages.h	/^	struct RobotTimeSlotConfig:public IMessageCreator<RobotTimeslotConfigData, MsgType::Command,Cmd/;"	s	namespace:Simple	inherits:IMessageCreator<RobotTimeslotConfigData,MsgType::Command,CmdId::RobotTimeSlotConfig>
Simple::RobotTimeSlotConfig::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotTimeslotConfigData>> operator() (char time_slot, char led_id , char /;"	f	struct:Simple::RobotTimeSlotConfig	typeref:typename:std::shared_ptr<Msg<RobotTimeslotConfigData>>	access:public	signature:(char time_slot,char led_id,char pd_id_for_chan_1,char pd_id_for_chan_2)
Simple::SensorDataParser	protocol-v1/SensorDataParser.h	/^	struct SensorDataParser {$/;"	s	namespace:Simple
Simple::SensorDataParser::SensorDataParser	protocol-v1/SensorDataParser.h	/^			SensorDataParser(char DataSize, char DarkSize ) {$/;"	f	struct:Simple::SensorDataParser	access:public	signature:(char DataSize,char DarkSize)
Simple::SensorDataParser::darkSize	protocol-v1/SensorDataParser.h	/^			int darkSize() { return  m_DarkSize;}$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
Simple::SensorDataParser::dataSize	protocol-v1/SensorDataParser.h	/^			int dataSize() { return  m_DataSize;}$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
Simple::SensorDataParser::ir_data	protocol-v1/SensorDataParser.h	/^			std::array<unsigned long, 128>  ir_data;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:std::array<unsigned long,128>	access:public
Simple::SensorDataParser::m_DarkSize	protocol-v1/SensorDataParser.h	/^			int m_DarkSize;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
Simple::SensorDataParser::m_DataSize	protocol-v1/SensorDataParser.h	/^			int m_DataSize;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
Simple::SensorDataParser::m_sysTick	protocol-v1/SensorDataParser.h	/^			int m_sysTick;			$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
Simple::SensorDataParser::parse	protocol-v1/SensorDataParser.h	/^			int  parse(const unsigned char *raw_data, int size) {$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:(const unsigned char * raw_data,int size)
Simple::SensorDataParser::sysTick	protocol-v1/SensorDataParser.h	/^			int sysTick() {$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
Simple::StatTransmitting	protocol-v1/messages.h	/^	struct StatTransmitting:public IMessageCreator<StartStopData, MsgType::Command,CmdId::RequestRa/;"	s	namespace:Simple	inherits:IMessageCreator<StartStopData,MsgType::Command,CmdId::RequestRawData>
Simple::StatTransmitting::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<StartStopData>> operator() () {$/;"	f	struct:Simple::StatTransmitting	typeref:typename:std::shared_ptr<Msg<StartStopData>>	access:public	signature:()
Simple::StopTransmitting	protocol-v1/messages.h	/^	struct StopTransmitting:public IMessageCreator<StartStopData, MsgType::Command,CmdId::RequestRa/;"	s	namespace:Simple	inherits:IMessageCreator<StartStopData,MsgType::Command,CmdId::RequestRawData>
Simple::StopTransmitting::operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<StartStopData>> operator() () {$/;"	f	struct:Simple::StopTransmitting	typeref:typename:std::shared_ptr<Msg<StartStopData>>	access:public	signature:()
StartStopData	protocol-v1/ProtoclDataStructures.h	/^		struct StartStopData {$/;"	s	namespace:Simple::RequestData
StatTransmitting	protocol-v1/messages.h	/^	struct StatTransmitting:public IMessageCreator<StartStopData, MsgType::Command,CmdId::RequestRa/;"	s	namespace:Simple	inherits:IMessageCreator<StartStopData,MsgType::Command,CmdId::RequestRawData>
StateTrack	IProtocolParser.h	/^		virtual void StateTrack(unsigned char c)  = 0;$/;"	p	class:IProtocolParser	typeref:typename:void	access:public	signature:(unsigned char c)
StateTrack	protocol-v1/ProtocolParser.h	/^			void StateTrack(unsigned char c) override {$/;"	f	class:Simple::ProtocolParser	typeref:typename:void	access:private	signature:(unsigned char c)
StopTransmitting	protocol-v1/messages.h	/^	struct StopTransmitting:public IMessageCreator<StartStopData, MsgType::Command,CmdId::RequestRa/;"	s	namespace:Simple	inherits:IMessageCreator<StartStopData,MsgType::Command,CmdId::RequestRawData>
Suffix	protocol-v1/ProtocolParser.h	/^			enum ReceiveState {Preamble, MsgType, Cmd, Length, Data, CheckSum,  Suffix};$/;"	e	enum:Simple::ProtocolParser::ReceiveState	access:public
UART_DEVICE	test/test1.cpp	/^#define UART_DEVICE /;"	d	file:
Wrongdata	protocol-v1/ProtocolParser.h	/^			virtual void Wrongdata() = 0;$/;"	p	class:Simple::IHandleUartMsg	typeref:typename:void	access:public	signature:()
Wrongdata	protocol-v1/ProtocolParser.h	/^			void Wrongdata() override {$/;"	f	class:Simple::HandleUartMsg	typeref:typename:void	access:public	signature:()
__anon043212b60102	test/test1.cpp	/^	threadPool->beginTask([]()->void{$/;"	f	function:run_the_application	typeref:typename:void	file:	signature:()
ack_nack	protocol-v1/ProtoclDataStructures.h	/^			char ack_nack;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
b	IProtocolParser.h	/^		unsigned char b[1024];$/;"	m	class:IProtocolParser	typeref:typename:unsigned char[1024]	access:private
buffer	protocol-v1/ProtoclDataStructures.h	/^				unsigned char buffer[n]; $/;"	m	struct:Simple::ResponseData::GenericParsingData	typeref:typename:unsigned char[]	access:public
buffer	protocol-v1/messages.h	/^			char buffer[sizeof (MsgData) + 6];$/;"	m	struct:Simple::Msg	typeref:typename:char[]	access:public
cmd	protocol-v1/messages.h	/^			char cmd;$/;"	m	struct:Simple::Msg	typeref:typename:char	access:public
cmd_id	protocol-v1/ProtoclDataStructures.h	/^			char cmd_id;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
configData	robot.h	/^		auto & configData() {$/;"	f	class:Robot	typeref:typename:auto &	access:public	signature:()
configData	robot.h	/^		void configData(Simple::ResponseData::ConfigParamData & ConfigParamData) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(Simple::ResponseData::ConfigParamData & ConfigParamData)
config_id	protocol-v1/ProtoclDataStructures.h	/^			char config_id; $/;"	m	struct:Simple::RequestData::ConfigData	typeref:typename:char	access:public
config_id	protocol-v1/ProtoclDataStructures.h	/^			char config_id;$/;"	m	struct:Simple::ResponseData::ConfigParamData	typeref:typename:char	access:public
config_param	protocol-v1/ProtoclDataStructures.h	/^			char config_param;$/;"	m	struct:Simple::ResponseData::ConfigParamData	typeref:typename:char	access:public
crc	protocol-v1/messages.h	/^			unsigned char crc;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
dark	protocol-v1/ProtoclDataStructures.h	/^			char dark;$/;"	m	struct:Simple::RequestData::RobotSetSlotSizeData	typeref:typename:char	access:public
darkSize	protocol-v1/SensorDataParser.h	/^			int darkSize() { return  m_DarkSize;}$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
data	protocol-v1/messages.h	/^			MsgData data; $/;"	m	struct:Simple::Msg	typeref:typename:MsgData	access:public
dataSize	protocol-v1/SensorDataParser.h	/^			int dataSize() { return  m_DataSize;}$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
deviceInfo	robot.h	/^		auto  & deviceInfo() {$/;"	f	class:Robot	typeref:typename:auto &	access:public	signature:()
deviceInfo	robot.h	/^		void deviceInfo(Simple::ResponseData::DeviceInfoData & DeviceInfoData) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(Simple::ResponseData::DeviceInfoData & DeviceInfoData)
getConfigData	robot.h	/^		void getConfigData(char config_id) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char config_id)
getDeviceInfo	robot.h	/^		void getDeviceInfo() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
hw_version	protocol-v1/ProtoclDataStructures.h	/^			char hw_version[2];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[2]	access:public
id	protocol-v1/ProtoclDataStructures.h	/^			char id;$/;"	m	struct:Simple::RequestData::RobotSingleConfigData	typeref:typename:char	access:public
idx	protocol-v1/ProtocolParser.h	/^			int idx;$/;"	m	class:Simple::ProtocolParser	typeref:typename:int	access:private
ir_data	protocol-v1/SensorDataParser.h	/^			std::array<unsigned long, 128>  ir_data;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:std::array<unsigned long,128>	access:public
led_id	protocol-v1/ProtoclDataStructures.h	/^			char led_id;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
led_width_in_microseconds	protocol-v1/ProtoclDataStructures.h	/^			char led_width_in_microseconds;$/;"	m	struct:Simple::RequestData::RobotSetLedWidthData	typeref:typename:char	access:public
length	protocol-v1/ProtocolParser.h	/^			unsigned char length;$/;"	m	class:Simple::ProtocolParser	typeref:typename:unsigned char	access:private
m_ConfigParamData	robot.h	/^		Simple::ResponseData::ConfigParamData m_ConfigParamData;$/;"	m	class:Robot	typeref:typename:Simple::ResponseData::ConfigParamData	access:private
m_DarkSize	protocol-v1/SensorDataParser.h	/^			int m_DarkSize;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
m_DataSize	protocol-v1/SensorDataParser.h	/^			int m_DataSize;$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
m_DeviceInfoData	robot.h	/^		Simple::ResponseData::DeviceInfoData m_DeviceInfoData;$/;"	m	class:Robot	typeref:typename:Simple::ResponseData::DeviceInfoData	access:private
m_handleMsg	protocol-v1/ProtocolParser.h	/^			std::shared_ptr<IHandleUartMsg>  m_handleMsg ;$/;"	m	class:Simple::ProtocolParser	typeref:typename:std::shared_ptr<IHandleUartMsg>	access:private
m_msg_counter	protocol-v1/messages.h	/^			static unsigned int  m_msg_counter; 	$/;"	m	struct:Simple::IMessageCreator	typeref:typename:unsigned int	access:public
m_msg_counter	protocol-v1/messages.h	/^		unsigned int IMessageCreator< MsgData,  msgType, cmdId >::m_msg_counter = 0;$/;"	m	class:Simple::IMessageCreator< MsgData, msgType, cmdId >	typeref:typename:unsigned int
m_sysTick	protocol-v1/SensorDataParser.h	/^			int m_sysTick;			$/;"	m	struct:Simple::SensorDataParser	typeref:typename:int	access:private
m_uart	IProtocolParser.h	/^		std::shared_ptr<Hal::IUart> m_uart;$/;"	m	class:IProtocolParser	typeref:typename:std::shared_ptr<Hal::IUart>	access:private
m_uart	robot.h	/^		std::shared_ptr<Hal::IUart> m_uart;$/;"	m	class:Robot	typeref:typename:std::shared_ptr<Hal::IUart>	access:private
main	test/test1.cpp	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int	signature:(int argc,char * argv[])
mcu_serial_number	protocol-v1/ProtoclDataStructures.h	/^			char mcu_serial_number[8];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[8]	access:public
mode	protocol-v1/ProtoclDataStructures.h	/^			char mode; \/\/  0 conitunes, 1 digital model$/;"	m	struct:Simple::RequestData::RobotSetScanModeData	typeref:typename:char	access:public
msg	protocol-v1/ProtocolParser.h	/^			MsgToParse msg;$/;"	m	class:Simple::ProtocolParser	typeref:typename:MsgToParse	access:private
num_int	protocol-v1/ProtoclDataStructures.h	/^			char num_int; $/;"	m	struct:Simple::RequestData::RobotSetNumberOfPulsesData	typeref:typename:char	access:public
num_repeat	protocol-v1/ProtoclDataStructures.h	/^			char num_repeat; $/;"	m	struct:Simple::RequestData::RobotSetNumberOfPulsesData	typeref:typename:char	access:public
on_off	protocol-v1/ProtoclDataStructures.h	/^			char on_off; $/;"	m	struct:Simple::RequestData::StartStopData	typeref:typename:char	access:public
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<ConfigData>> operator () (char config_id)  {$/;"	f	struct:Simple::GetConfig	typeref:typename:std::shared_ptr<Msg<ConfigData>>	access:public	signature:(char config_id)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<EmptyStruct>> operator() () {$/;"	f	struct:Simple::DeviceInfo	typeref:typename:std::shared_ptr<Msg<EmptyStruct>>	access:public	signature:()
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<EmptyStruct>> operator() () {$/;"	f	struct:Simple::GetIRData	typeref:typename:std::shared_ptr<Msg<EmptyStruct>>	access:public	signature:()
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetLedWidthData>> operator () (char led_width_in_microseconds)  {$/;"	f	struct:Simple::RobotSetLedWidth	typeref:typename:std::shared_ptr<Msg<RobotSetLedWidthData>>	access:public	signature:(char led_width_in_microseconds)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetNumberOfPulsesData>> operator () (char num_int, char num_repeat) /;"	f	struct:Simple::RobotSetNumberOfPulses	typeref:typename:std::shared_ptr<Msg<RobotSetNumberOfPulsesData>>	access:public	signature:(char num_int,char num_repeat)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetScanModeData>> operator () (char mode)  {$/;"	f	struct:Simple::RobotSetScanMode	typeref:typename:std::shared_ptr<Msg<RobotSetScanModeData>>	access:public	signature:(char mode)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSetSlotSizeData>> operator () (int signal, int dark)  {$/;"	f	struct:Simple::RobotSetSlotSize	typeref:typename:std::shared_ptr<Msg<RobotSetSlotSizeData>>	access:public	signature:(int signal,int dark)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotSingleConfigData>> operator() (char id, char value) {$/;"	f	struct:Simple::RobotSingleConfig	typeref:typename:std::shared_ptr<Msg<RobotSingleConfigData>>	access:public	signature:(char id,char value)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<RobotTimeslotConfigData>> operator() (char time_slot, char led_id , char /;"	f	struct:Simple::RobotTimeSlotConfig	typeref:typename:std::shared_ptr<Msg<RobotTimeslotConfigData>>	access:public	signature:(char time_slot,char led_id,char pd_id_for_chan_1,char pd_id_for_chan_2)
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<StartStopData>> operator() () {$/;"	f	struct:Simple::StatTransmitting	typeref:typename:std::shared_ptr<Msg<StartStopData>>	access:public	signature:()
operator () 	protocol-v1/messages.h	/^			std::shared_ptr<Msg<StartStopData>> operator() () {$/;"	f	struct:Simple::StopTransmitting	typeref:typename:std::shared_ptr<Msg<StartStopData>>	access:public	signature:()
parse	protocol-v1/SensorDataParser.h	/^			int  parse(const unsigned char *raw_data, int size) {$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:(const unsigned char * raw_data,int size)
payload_idx	protocol-v1/ProtoclDataStructures.h	/^			char payload_idx;$/;"	m	struct:Simple::ResponseData::AckNack	typeref:typename:char	access:public
pd_id_for_chan_1	protocol-v1/ProtoclDataStructures.h	/^			char pd_id_for_chan_1;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
pd_id_for_chan_2	protocol-v1/ProtoclDataStructures.h	/^			char pd_id_for_chan_2;	$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
postamble	protocol-v1/messages.h	/^			unsigned char postamble;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
preamble	protocol-v1/messages.h	/^			unsigned char preamble;$/;"	m	struct:Simple::Msg	typeref:typename:unsigned char	access:public
protocol_SRC	CMakeLists.txt	/^set ( protocol_SRC $/;"	v
protocol_static	CMakeLists.txt	/^add_library(protocol_static STATIC$/;"	t
run_the_application	test/test1.cpp	/^void run_the_application() {$/;"	f	typeref:typename:void	signature:()
scan	robot.h	/^		bool scan(std::shared_ptr<Data::Scan> scan, std::shared_ptr<StreamData> streamData) {$/;"	f	class:Robot	typeref:typename:bool	access:public	signature:(std::shared_ptr<Data::Scan> scan,std::shared_ptr<StreamData> streamData)
setLedWidth	robot.h	/^		void setLedWidth(char led_width_in_microseconds) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char led_width_in_microseconds)
setNumberOfPulses	robot.h	/^		void setNumberOfPulses(char num_int, char num_repeat) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char num_int,char num_repeat)
setScanMode	robot.h	/^		void setScanMode(char mode) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char mode)
setSlotSize	robot.h	/^		void setSlotSize(char signal, char dark) {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char signal,char dark)
signal	protocol-v1/ProtoclDataStructures.h	/^			char signal;$/;"	m	struct:Simple::RequestData::RobotSetSlotSizeData	typeref:typename:char	access:public
size	protocol-v1/ProtoclDataStructures.h	/^				int size;$/;"	m	struct:Simple::ResponseData::GenericParsingData	typeref:typename:int	access:public
size	protocol-v1/messages.h	/^			constexpr size_t size() {$/;"	f	struct:Simple::Msg	typeref:typename:size_t	access:public	signature:()
start	robot.h	/^		void start() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
state	protocol-v1/ProtocolParser.h	/^			ReceiveState state  = Preamble; $/;"	m	class:Simple::ProtocolParser	typeref:typename:ReceiveState	access:private
stop	robot.h	/^		void stop() {$/;"	f	class:Robot	typeref:typename:void	access:public	signature:()
sw_version	protocol-v1/ProtoclDataStructures.h	/^			char sw_version[3];$/;"	m	struct:Simple::ResponseData::DeviceInfoData	typeref:typename:char[3]	access:public
sysTick	protocol-v1/SensorDataParser.h	/^			int sysTick() {$/;"	f	struct:Simple::SensorDataParser	typeref:typename:int	access:public	signature:()
test1	test/CMakeLists.txt	/^add_executable(test1 $/;"	t
timeSlotConfigData	robot.h	/^		void timeSlotConfigData(char time_slot, char led_id,char pd_id_for_chan_1,char pd_id_for_chan_/;"	f	class:Robot	typeref:typename:void	access:public	signature:(char time_slot,char led_id,char pd_id_for_chan_1,char pd_id_for_chan_2)
time_slot	protocol-v1/ProtoclDataStructures.h	/^			char time_slot;$/;"	m	struct:Simple::RequestData::RobotTimeslotConfigData	typeref:typename:char	access:public
type	protocol-v1/messages.h	/^			MsgType type;$/;"	m	struct:Simple::Msg	typeref:typename:MsgType	access:public
value	protocol-v1/ProtoclDataStructures.h	/^			char value;$/;"	m	struct:Simple::RequestData::RobotSingleConfigData	typeref:typename:char	access:public
